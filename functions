# Common function definitions

# pathremove directory_name [VARIABLE]
# Remove an entry on a colon separated path-like variable specified in the
# second argument (defaults to PATH).
function pathremove () {
    local IFS=':'
    local NEWPATH
    local DIR
    local PATHVARIABLE=${2:-PATH}
    for DIR in ${!PATHVARIABLE}; do
        if [ "${DIR}" != "$1" ]; then
            NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
        fi
    done
    export $PATHVARIABLE="${NEWPATH}"
}

# pathprepend directory_name [VARIABLE]
# Prepend a directory, if it exists, to a colon separated path-like variable
# specified in the second argument  (defaults to PATH), removing any duplicates
# elsewhere in the list.
function pathprepend () {
    pathremove "$1" "$2"
    [ -d "$1" ] && {
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
    }
}

# pathappend directory_name [VARIABLE]
# Append a directory, if it exists, to a colon separated path-like variable
# specified in the second argument  (defaults to PATH), removing any duplicates
# elsewhere in the list.
function pathappend () {
    pathremove "$1" "$2"
    [ -d "$1" ] && {
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
    }
}
